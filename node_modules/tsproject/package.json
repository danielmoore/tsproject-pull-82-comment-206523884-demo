{
  "_args": [
    [
      "ToddThomson/tsproject#7e04a7b",
      "/Users/vbq655/Development/tsproject-demo"
    ]
  ],
  "_from": "toddthomson/tsproject#7e04a7b",
  "_id": "tsproject@1.2.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/tsproject",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/toddthomson/tsproject/7e04a7b/package.json",
      "gitUrl": "git://github.com/toddthomson/tsproject.git#7e04a7b",
      "httpsUrl": "git+https://github.com/toddthomson/tsproject.git#7e04a7b",
      "shortcut": "github:toddthomson/tsproject#7e04a7b",
      "ssh": "git@github.com:toddthomson/tsproject.git#7e04a7b",
      "sshUrl": "git+ssh://git@github.com/toddthomson/tsproject.git#7e04a7b",
      "type": "github"
    },
    "name": null,
    "raw": "ToddThomson/tsproject#7e04a7b",
    "rawSpec": "ToddThomson/tsproject#7e04a7b",
    "scope": null,
    "spec": "github:toddthomson/tsproject#7e04a7b",
    "type": "hosted"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git+https://github.com/toddthomson/tsproject.git#7e04a7bc39fde02f327eee6e278e32a840e07d5d",
  "_shasum": "32e0501f448640aaea987f4a3acae6b305357e0b",
  "_shrinkwrap": null,
  "_spec": "ToddThomson/tsproject#7e04a7b",
  "_where": "/Users/vbq655/Development/tsproject-demo",
  "author": {
    "email": "todd.thomson@me.com",
    "name": "Todd Thomson"
  },
  "bugs": {
    "url": "https://github.com/toddthomson/tsproject/issues"
  },
  "dependencies": {
    "chalk": "^1.1.1",
    "chokidar": "^1.4.2",
    "glob": "^5.0.15",
    "lodash": "^3.10.1",
    "readable-stream": "^1.1.13",
    "typescript": "~1.8.2",
    "vinyl": "^1.1.1"
  },
  "description": "Typescript project compiler and modular typescript bundle optimizer for gulp (Ts Vinyl Adapter).",
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-rimraf": "~0.2.0",
    "gulp-tsd": "~0.1.0",
    "require-dir": "^0.3.0",
    "run-sequence": "^1.1.5",
    "tsd": "^0.6.5",
    "tsproject": "~1.2.0",
    "typescript": "~1.8.2",
    "vinyl-paths": "^2.1.0"
  },
  "gitHead": "7e04a7bc39fde02f327eee6e278e32a840e07d5d",
  "homepage": "https://github.com/toddthomson/tsproject",
  "keywords": [
    "bundle",
    "bundling",
    "typescript minifier",
    "minify",
    "minification",
    "compiler",
    "cache optimized compiler",
    "incremental build",
    "d.ts",
    "declaration",
    "definitions",
    "ES6 external modules",
    "gulp",
    "library",
    "modular typescript",
    "module bundles",
    "optimizer",
    "project",
    "transpiler",
    "tsconfig.json",
    "typescript bundles",
    "vinyl adapter"
  ],
  "license": "MIT",
  "main": "./tsproject.min.js",
  "name": "tsproject",
  "optionalDependencies": {},
  "readme": "ï»¿[![npm version](https://badge.fury.io/js/tsproject.svg)](http://badge.fury.io/js/tsproject)\n# TsProject\nTsProject is a Typescript bundle compiler which utilizes the Typescript project configuration file, tsconfig.json, to provide a compilation context for source files, module bundles and compile options.\n\nTsProject produces a compiled output stream of vinyl files for further processing in the gulp build pipeline.\n\n## Top Features\n\n* Bundling of ES6 external Typescript modules\n* Bundle minification with identifier shortening and whitespace removal\n* Cache optimized incremental project builds\n* File glob pattern matching for project files\n \n## What's New\n\nTsProject 1.2.0 supports Typescript 1.8.x.\n\nTsProject 1.2.0 provides bundle minification by shortening identifiers and whitespace removal.\n\nTsProject 1.2.0 provides bundle packaging support for library and component types.\n\nTsProject 1.1.0 provides project watch support for cache optimized, incremental builds.\n\nTsProject 1.1.0 supports Typescript 1.7!\n\nTsProject 1.0.5 provides file glob pattern matching for specifying \"files\" in the tsconfig.json project file.\n\nTsProject 1.0.5 is used to build TsProject. TsProject is a bundled, single file node module using ES6 module imports.\n\nTsProject 1.0.1 bundles React (.tsx) file types. TsProject on github contains a [React based TodoMVC sample](https://github.com/ToddThomson/tsproject/tree/master/ReactTodoMVC) to help you get started.\n\n## Why TsProject?\n\nTsProject provides 2 new features:\n\n1. **A single Typescript project build context**. TsProject uses the new tsconfig.json Typescript project file introduced in Typescript version 1.5 to configure source files, bundles and compile options.\n\n2. **Single file typescript bundles and javascript bundles for packaging of Typescript, javascript and Typescript definition files**. TsProject bundles file dependencies of external Typescript modules at compilation time rather than relying on build tools (AMD Optimizer, r.js for example ) further down in the build pipeline.\n\n## TsProject Wiki\n\nAdditional details can be found on the TsProject [wiki](https://github.com/ToddThomson/tsproject/wiki).\n\n## Typescript ES6 External Module Bundles\n\nTsProject supports a \"bundles\" property within the tsconfig.json project file. The \"bundles\" property may contain a list of named bundles. Each bundle must provide an array of source files and may optionally specify bundle configuration settings. \nThe Typescript source file and its dependencies are packaged as a single Typescript file and output with the bundle name. The Typescript bundle is compiled to a single js javascript file and a single d.ts declaration file.\n\nThe following is a sample tsconfig.json showing the \"bundles\" property:\n\n```\n{\n    \"compilerOptions\": {\n        \"module\": \"amd\",\n        \"target\": \"es5\",\n        \"noResolve\": false,\n        \"declaration\": true,\n        \"diagnostics\": true\n    },\n\n    \"files\": [\n        \"index.ts\",\n        \"page.ts\",\n        \"common.ts\",\n\t\t\"plugin.ts\"\n    ],\n    \n    \"bundles\": {\n        \"app\": {\n            \"files\": [ \"index.ts\" ]\n        },\n        \"components\": {\n            \"files\": [\n                \"page.ts\",\n                \"plugin.ts\"\n            ],\n            \"config\": {\n\t\t\t    \"declaration\": true,\n                \"outDir\": \"./bundles\",\n\t\t\t\t\"minify\": true  \n            }\n        }\n    }\n}\n```\n\n## How to install\n\n```\nnpm install tsproject\n```\n\n## API\n\n    tsproject.src( projectConfigPath: string, settings: any )\n\nWhere:\n\n**projectConfigPath** is a relative directory path to the default Typescript project file named \"tsconfig.json\".\nOr,\n**projectConfigPath** is a relative path to a named Typescript project file.   \n\n## Usage - Gulp Build Pipeline\n\nTsProject on github contains a [TodoMVC sample](https://github.com/ToddThomson/tsproject/tree/master/TsProjectTodoMVC) to help you get started.\nThe sample is built using Angular, Typescript ES6 modules and Require.\n\nHere is a simple gulpfile.js:\n\n```\nvar tsproject = require( 'tsproject' );\nvar gulp = require( 'gulp' );\ngulp.task( 'build', function() {\n\n    // path to directory of tsconfig.json provided\n    tsproject.src( './src/project' )\n        .pipe(gulp.dest('./build'));\n\n    // path to named configuration file provided and optional settings specified \n    return tsproject.src( './src/project_a/myconfig.json',\n\t\t{ \n\t\t\tlogLevel: 1,\n\t\t\tcompilerOptions: {\n\t\t\t\tlistFiles: true\n\t\t\t} \n\t\t})\n        .pipe( gulp.dest( './mybuild' ) );\n\n});\n```\n\n## Building TsProject\n\nTsProject depends on [NPM](https://docs.npmjs.com/) as a package manager and \n[Gulp](https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md) as a build tool. \nIf you haven't already, you'll need to install both these tools in order to \nbuild TsProject.\n\nOnce Gulp is installed, you can build it with the following commands:\n\n```\nnpm install\ngulp build\n```  \n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/toddthomson/tsproject.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "typings": "./tsproject.d.ts",
  "version": "1.2.0"
}
